@model thingslineWeb.Models.ExternalLoginConfirmationViewModel
@{
    ViewBag.Title = "登録";
}
<h2>@ViewBag.Title</h2>
<h3>@ViewBag.LoginProvider アカウントを関連付けます。</h3>

@using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <h4>関連付けフォーム</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <p class="text-info">
        正常に認証しました: <strong>@ViewBag.LoginProvider</strong> での認証に成功しました。<br>
        ログインを完了するには [登録] ボタンをクリックしてください。
    </p>
    <div class="form-group">
        @Html.LabelFor(m => m.DefaultUserName, new { @class = "col-md-2 control-label" })<br>
        @Html.DisplayFor(m => m.DefaultUserName)
        <div class="col-md-10">
            @Html.ValidationMessageFor(m => m.DefaultUserName, "", new { @class = "text-danger" })
            @Html.HiddenFor(m => m.DefaultUserName, new { @class = "form-control pointer-events : none" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.HiddenFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <BR>
    <div class="form-group">
        <input type="submit"  value="登録" />
    </div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
}